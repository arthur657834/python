ex1:
vi test.py
print "show me" 
f = open('demo/testdd.txt', 'r')
content = f.read()
f.close()
print content

vi setup.py
from distutils.core import setup  
	setup(
	name='Myblog',
	version='1.0',    
	description='My Blog Distribution Utilities',    
	author='test',    
	author_email='test@gmail.com',   . 
	url='http://test.com',    
	py_modules=['test'],    #需跟打包的py文件名称一致
	package_data = {        #包含非py文件
		'demo':['*.txt']
	},
) 

echo recursive-include demo *.txt >>MANIFEST.in   #包含非py文件

打包测试:
rm -fr dist/*;python setup.py sdist;tar zxvf dist/Myblog-1.0.tar.gz;cd Myblog-1.0/;python setup.py install;python -c "import test"

ex2:
vi hello.py
def hello():
	f = open('testdd.txt', 'r')
	content = f.read()
	f.close()
	print content
	

vi setup.py
#coding:utf-8
import os
import sys

from setuptools import setup, find_packages

setup(
    name = "demo",
    version = "0.0.1",
    packages = find_packages(),  # packages = ['project_file'],  # 要打包的项目文件夹
    include_package_data = True, # 自动打包文件夹内所有数据
	zip_safe=True,               # 设定项目包为安全，不用每次都检测其安全性
	# 设置程序的入口为hello
    # 安装后，命令行执行hello相当于调用hello.py中的main方法
    entry_points = {
        'console_scripts' : [
            'demo = demo.hello:hello'
        ],
    },
    package_data = {
        'demo':['*.txt']
    },
    author = "test", 
    author_email = 'test@email.com',
    url = "http://test.com",
    description = 'a demo for setuptools',
)

打包测试:
rm -fr dist/*;python setup.py sdist;tar zxvf dist/demo-0.0.1.tar.gz;cd demo-0.0.1/;python setup.py install;python -c "import hello;hello.hello()"
cd /root/py-packagetest2/;rm -fr demo-0.0.1



install_requires = [          # 安装依赖的其他包
    'docutils>=0.3',
    'requests',
    ],
python setup.py --help-commands
--python setup.py build     # 仅编译不安装
--python setup.py install    #安装到python安装目录的lib下
--python setup.py sdist      #生成压缩包(zip/tar.gz)
--python setup.py bdist_wininst  #生成NT平台安装包(.exe)
--python setup.py bdist_rpm #生成rpm包

python setup.py bdist --help-formats
--formats=rpm      RPM distribution
--formats=gztar    gzip'ed tar file
--formats=bztar    bzip2'ed tar file
--formats=ztar     compressed tar file
--formats=tar      tar file
--formats=wininst  Windows executable installer
--formats=zip      ZIP file

python setup.py bdist --formats=zip
